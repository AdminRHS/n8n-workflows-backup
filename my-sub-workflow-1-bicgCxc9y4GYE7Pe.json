{"createdAt":"2025-04-14T08:05:23.588Z","updatedAt":"2025-04-14T10:05:01.000Z","id":"bicgCxc9y4GYE7Pe","name":"My Sub-Workflow 1","active":false,"nodes":[{"parameters":{"content":"## Subworkflow","height":731.7039821513649,"width":1910.7813046051347,"color":6},"id":"b3c7e204-0c3b-4444-ac5e-085ccbd3ffac","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[-820,-380],"typeVersion":1},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"f1a40bde-187c-4b53-9207-6a98f1fb4569","name":"Return","type":"n8n-nodes-base.set","position":[980,-180],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"ff8c5ef6-0492-4ef8-9826-0a4a32f1433a","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[-60,-300],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}]},"options":{}},"id":"8e16ccf3-23f6-438a-bd3b-a0e1e391a32b","name":"If file too large","type":"n8n-nodes-base.if","position":[-300,-280],"typeVersion":2},{"parameters":{},"id":"3b4ee59d-d586-4d23-9ce1-9e854e971ea6","name":"Merge Items","type":"n8n-nodes-base.merge","position":[-300,-20],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"216e2577-99a5-4f8d-a250-e06668f05683","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[-100,-20],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"6de66e67-f687-4d38-a5c1-4cd2152f835d","name":"Check Status","type":"n8n-nodes-base.switch","position":[300,-20],"typeVersion":1},{"parameters":{},"id":"5ac729ea-d204-4b14-a44c-66d323f43d64","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[520,-180],"typeVersion":1},{"parameters":{},"id":"e8cae171-185a-40f9-9ec1-9021708278c3","name":"File is different","type":"n8n-nodes-base.noOp","position":[520,-20],"typeVersion":1},{"parameters":{},"id":"18440468-f08e-4b52-aa48-4484cf5c593e","name":"File is new","type":"n8n-nodes-base.noOp","position":[520,180],"typeVersion":1},{"parameters":{"authentication":"oAuth2","resource":"file","owner":{"__rl":true,"value":"={{ $('Config1').item.json.repo_owner }}","mode":""},"repository":{"__rl":true,"value":"={{ $('Config1').item.json.repo_name }}","mode":""},"filePath":"={{ $('Config1').item.json.repo_path }}{{ $json.subPath }}{{$('When Executed by Another Workflow').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('When Executed by Another Workflow').first().json.name}} ({{$json.github_status}})"},"id":"d9392ed3-417e-491a-a2ae-b19c69a193ca","name":"Create new file","type":"n8n-nodes-base.github","position":[740,180],"typeVersion":1,"credentials":{"githubOAuth2Api":{"id":"UR8qzEHmBK5P4OtW","name":"GitHub OAuth"}}},{"parameters":{"authentication":"oAuth2","resource":"file","operation":"edit","owner":{"__rl":true,"value":"={{ $('Config1').item.json.repo_owner }}","mode":""},"repository":{"__rl":true,"value":"={{ $('Config1').item.json.repo_name }}","mode":""},"filePath":"={{ $('Config1').item.json.repo_path }}{{ $json.subPath }}{{$('When Executed by Another Workflow').first().json.id}}.json","fileContent":"={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}","commitMessage":"={{$('When Executed by Another Workflow').first().json.name}} ({{$json.github_status}})"},"id":"953393a2-6369-4ac5-88c5-7bad7b998c79","name":"Edit existing file","type":"n8n-nodes-base.github","position":[740,-20],"typeVersion":1,"credentials":{"githubOAuth2Api":{"id":"UR8qzEHmBK5P4OtW","name":"GitHub OAuth"}}},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('When Executed by Another Workflow').first().json.createdAt.split('-')[0] }}/{{ $('When Executed by Another Workflow').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"b6e246c4-c9b8-40eb-875a-95f3a42e79b0","name":"Create sub path","type":"n8n-nodes-base.set","position":[100,-20],"typeVersion":3.3},{"parameters":{"resource":"file","operation":"get","owner":{"__rl":true,"mode":"","value":"={{ $('Config1').first().item.repo_owner }}"},"repository":{"__rl":true,"mode":"","value":"={{ $('Config1').first().item.repo_name }}"},"filePath":"={{ $('Config1').first().item.repo_path }}{{ $('When Executed by Another Workflow').first().json.createdAt.split('-')[0] }}/{{ $('When Executed by Another Workflow').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json","asBinaryProperty":false,"additionalParameters":{}},"id":"c88a544b-13a0-48ca-98ee-95d48e9ed807","name":"Get file data","type":"n8n-nodes-base.github","position":[-500,-280],"typeVersion":1,"alwaysOutputData":true,"credentials":{"githubApi":{"id":"dJXTJWeo6Z3kFPDI","name":"GitHub account"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"=AdminRHS"},{"id":"88a3240a-388d-42e4-bbb7-48546eca2ba5","name":"repo_name","value":"n8n","type":"string"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"=https://github.com/AdminRHS/n8n"}]},"includeOtherFields":true,"options":{}},"id":"cbe22031-69b1-4c27-99a6-1db2e82352cb","name":"Config1","type":"n8n-nodes-base.set","position":[-500,0],"typeVersion":3.4},{"parameters":{"workflowInputs":{"values":[{"name":"id"},{"name":"name"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-720,0],"id":"0f4cf6e2-c1e7-43e1-8928-f6875dc76a3f","name":"When Executed by Another Workflow"}],"connections":{"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Create sub path","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Config1":{"main":[[{"node":"Get file data","type":"main","index":0},{"node":"Merge Items","type":"main","index":1}]]},"When Executed by Another Workflow":{"main":[[{"node":"Config1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"89f79945-28aa-4f40-8284-60585fc4b4bb","triggerCount":0,"tags":[]}