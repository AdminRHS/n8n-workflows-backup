{"createdAt":"2025-04-15T16:13:01.359Z","updatedAt":"2025-04-15T16:19:07.000Z","id":"zvL4YpJpfCzXjs7q","name":"backup-workflows","active":false,"nodes":[{"parameters":{},"id":"01c01683-b42f-49b4-ade3-acbfe1e31854","name":"On clicking 'execute'","type":"n8n-nodes-base.manualTrigger","position":[480,80],"typeVersion":1},{"parameters":{"content":"## Subworkflow","height":731.7039821513649,"width":1910.7813046051347,"color":6},"id":"913a2ea9-fb42-4b08-b378-26dc64984e76","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[160,480],"typeVersion":1},{"parameters":{},"id":"6d157d7f-9156-4a95-a556-ed29fa9344fe","name":"Execute Workflow Trigger","type":"n8n-nodes-base.executeWorkflowTrigger","position":[60,840],"typeVersion":1},{"parameters":{"filters":{},"requestOptions":{}},"id":"194934a8-3f57-43dc-a8b6-ee0801ebdc5f","name":"n8n","type":"n8n-nodes-base.n8n","position":[880,180],"typeVersion":1,"credentials":{"n8nApi":{"id":"wm3wGPoKHQ2cyYcQ","name":"n8n account"}}},{"parameters":{"assignments":{"assignments":[{"id":"8d513345-6484-431f-afb7-7cf045c90f4f","name":"Done","type":"boolean","value":true}]},"options":{}},"id":"501c20e5-5f07-4483-84c5-82b5fe17a9bb","name":"Return","type":"n8n-nodes-base.set","position":[1720,660],"typeVersion":3.3},{"parameters":{"url":"={{ $json.download_url }}","options":{}},"id":"7f621ecc-2481-4c59-9493-bcb94c8abd44","name":"Get File","type":"n8n-nodes-base.httpRequest","position":[680,540],"typeVersion":4.2},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":1},"conditions":[{"id":"45ce825e-9fa6-430c-8931-9aaf22c42585","operator":{"type":"string","operation":"empty","singleValue":true},"leftValue":"={{ $json.content }}","rightValue":""},{"id":"9619a55f-7fb1-4f24-b1a7-7aeb82365806","operator":{"type":"string","operation":"notExists","singleValue":true},"leftValue":"={{ $json.error }}","rightValue":""}],"combinator":"and"},"options":{}},"id":"f3317eed-86ea-4bc8-ab7a-d6670fa79239","name":"If file too large","type":"n8n-nodes-base.if","position":[440,560],"typeVersion":2},{"parameters":{},"id":"32e1788f-03c1-44dd-9d98-809d8cf08717","name":"Merge Items","type":"n8n-nodes-base.merge","position":[440,820],"typeVersion":2},{"parameters":{"jsCode":"const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"},"id":"e85b231b-41a9-4e88-b6bd-2dfdb75d29ae","name":"isDiffOrNew","type":"n8n-nodes-base.code","position":[640,820],"typeVersion":1},{"parameters":{"dataType":"string","value1":"={{$json.github_status}}","rules":{"rules":[{"value2":"same"},{"value2":"different","output":1},{"value2":"new","output":2}]}},"id":"5afb68b9-4a1f-4502-9cae-99d8af46b636","name":"Check Status","type":"n8n-nodes-base.switch","position":[1040,820],"typeVersion":1},{"parameters":{},"id":"bef55a0c-eb8f-4143-8dca-453c1f505b04","name":"Same file - Do nothing","type":"n8n-nodes-base.noOp","position":[1260,660],"typeVersion":1},{"parameters":{},"id":"9c7a228e-22a7-4b04-ab10-618922805f3c","name":"File is different","type":"n8n-nodes-base.noOp","position":[1260,820],"typeVersion":1},{"parameters":{},"id":"6dd92650-9be9-4b6c-92dc-c8c6013bf0ac","name":"File is new","type":"n8n-nodes-base.noOp","position":[1260,1020],"typeVersion":1},{"parameters":{"authentication":"oAuth2","resource":"file","owner":{"__rl":true,"value":"AdminRHS","mode":"name"},"repository":{"__rl":true,"value":"n8n","mode":"list","cachedResultName":"n8n","cachedResultUrl":"https://github.com/AdminRHS/n8n"},"filePath":"={{ $('n8n').item.json.name }}","binaryData":true,"commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"0870b8b9-499a-4ac6-8bea-24619cf0f7f1","name":"Create new file","type":"n8n-nodes-base.github","position":[1480,1020],"typeVersion":1,"credentials":{"githubOAuth2Api":{"id":"UR8qzEHmBK5P4OtW","name":"GitHub OAuth"}}},{"parameters":{"authentication":"oAuth2","resource":"file","operation":"edit","owner":{"__rl":true,"value":"AdminRHS","mode":"name"},"repository":{"__rl":true,"value":"n8n","mode":"list","cachedResultName":"n8n","cachedResultUrl":"https://github.com/AdminRHS/n8n"},"filePath":"={{ $('n8n').item.json.name }}","binaryData":true,"commitMessage":"={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"},"id":"f7c90021-c000-4bef-9ca8-91801b86370a","name":"Edit existing file","type":"n8n-nodes-base.github","position":[1480,820],"typeVersion":1,"credentials":{"githubOAuth2Api":{"id":"UR8qzEHmBK5P4OtW","name":"GitHub OAuth"}}},{"parameters":{"options":{}},"id":"04bcf262-826f-4304-9a47-9313921eb822","name":"Loop Over Items","type":"n8n-nodes-base.splitInBatches","position":[1080,180],"typeVersion":3},{"parameters":{"rule":{"interval":[{"triggerAtHour":1,"triggerAtMinute":33}]}},"id":"6c102fde-2fb0-462f-b03f-2e8966c21d8a","name":"Schedule Trigger","type":"n8n-nodes-base.scheduleTrigger","position":[480,280],"typeVersion":1.2},{"parameters":{"assignments":{"assignments":[{"id":"dae43d3b-56e5-4098-b602-862ebf5cd073","name":"subPath","type":"string","value":"={{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[0] }}/{{ $('Execute Workflow Trigger').first().json.createdAt.split('-')[1] }}/"}]},"includeOtherFields":true,"options":{}},"id":"f8588462-b11f-4268-a26c-6018f7d99737","name":"Create sub path","type":"n8n-nodes-base.set","position":[840,820],"typeVersion":3.3},{"parameters":{"content":"## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.","height":417,"width":385,"color":4},"id":"8a5843bc-343c-415a-8048-3a10946d5098","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1},{"parameters":{"content":"## Main workflow loop","height":416.1856906618075,"width":1272.6408145680155,"color":7},"id":"fdb51700-5cd1-4a94-a04e-1f61c4b01aaf","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[440,0],"typeVersion":1},{"parameters":{"workflowId":"={{ $workflow.id }}","mode":"each","options":{}},"id":"fe9ab574-cf11-40f3-bbf8-8591e0f7308f","name":"Execute Workflow","type":"n8n-nodes-base.executeWorkflow","position":[1300,200],"typeVersion":1,"onError":"continueErrorOutput"},{"parameters":{"authentication":"oAuth2","resource":"file","operation":"list","owner":{"__rl":true,"value":"AdminRHS","mode":"name"},"repository":{"__rl":true,"value":"n8n","mode":"list","cachedResultName":"n8n","cachedResultUrl":"https://github.com/AdminRHS/n8n"}},"id":"1329fc70-02db-43a0-836f-4d8a875573f2","name":"Get file data","type":"n8n-nodes-base.github","position":[240,560],"typeVersion":1,"alwaysOutputData":true,"credentials":{"githubOAuth2Api":{"id":"UR8qzEHmBK5P4OtW","name":"GitHub OAuth"}},"continueOnFail":true},{"parameters":{"assignments":{"assignments":[{"id":"8f6d1741-772f-462a-811f-4c334185e4f0","name":"repo_owner","type":"string","value":"={{ $vars.repo_owner }}"},{"id":"8cac215c-4fd7-422f-9fd2-6b2d1e5e0383","name":"repo_name","type":"string","value":"={{ $vars.repo_name }}"},{"id":"eee305e9-4164-462a-86bd-80f0d58a31ae","name":"repo_path","type":"string","value":"={{ $vars.repo_path }}"}]},"includeOtherFields":true,"options":{}},"id":"825f4905-e6d3-4a52-99da-5970bcf2b47b","name":"Config","type":"n8n-nodes-base.set","position":[240,840],"typeVersion":3.4}],"connections":{"n8n":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Config":{"main":[[{"node":"Get file data","type":"main","index":0},{"node":"Merge Items","type":"main","index":1}]]},"Get File":{"main":[[{"node":"Merge Items","type":"main","index":0}]]},"File is new":{"main":[[{"node":"Create new file","type":"main","index":0}]]},"Merge Items":{"main":[[{"node":"isDiffOrNew","type":"main","index":0}]]},"isDiffOrNew":{"main":[[{"node":"Create sub path","type":"main","index":0}]]},"Check Status":{"main":[[{"node":"Same file - Do nothing","type":"main","index":0}],[{"node":"File is different","type":"main","index":0}],[{"node":"File is new","type":"main","index":0}]]},"Get file data":{"main":[[{"node":"If file too large","type":"main","index":0}]]},"Create new file":{"main":[[{"node":"Return","type":"main","index":0}]]},"Create sub path":{"main":[[{"node":"Check Status","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Execute Workflow","type":"main","index":0}]]},"Execute Workflow":{"main":[[{"node":"Loop Over Items","type":"main","index":0}],[{"node":"Loop Over Items","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"n8n","type":"main","index":0}]]},"File is different":{"main":[[{"node":"Edit existing file","type":"main","index":0}]]},"If file too large":{"main":[[{"node":"Get File","type":"main","index":0}],[{"node":"Merge Items","type":"main","index":0}]]},"Edit existing file":{"main":[[{"node":"Return","type":"main","index":0}]]},"On clicking 'execute'":{"main":[[{"node":"n8n","type":"main","index":0}]]},"Same file - Do nothing":{"main":[[{"node":"Return","type":"main","index":0}]]},"Execute Workflow Trigger":{"main":[[{"node":"Config","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"42a579c8-6d4f-4b93-92b7-0fada20e74c9","triggerCount":0,"tags":[]}