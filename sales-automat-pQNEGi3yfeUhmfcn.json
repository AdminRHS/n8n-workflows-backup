{"createdAt":"2025-04-09T11:11:33.733Z","updatedAt":"2025-04-15T14:56:33.000Z","id":"pQNEGi3yfeUhmfcn","name":"Sales Automat","active":false,"nodes":[{"parameters":{"operation":"getAll","limit":5,"simple":false,"filters":{"q":"subject:Meeting records:","sender":"meetings-noreply@google.com"},"options":{"downloadAttachments":true}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[160,-360],"id":"361aa350-e127-49b5-9639-0a6c298e2e97","name":"Gmail","webhookId":"fd589834-de5f-4a43-9809-04de4bcc6b08","credentials":{"gmailOAuth2":{"id":"s09JnuCcx9ezdMBU","name":"Sales N8N gmail "}}},{"parameters":{"promptType":"define","text":"=Extract key information from the following interview transcript. Please provide the data in a structured format, listing each item on a separate line.\nInformation to extract from:\nCompany Name of the company interviewed with: {{ $json[\"Company name\"] }}\n\nName and Job Title of the company representative who conducted the interview (sales or manager from the client company):\nList of candidate names who participated in the interview (and rh-s.com profile links if available):\nNames of managers from our company responsible for client engagement (LG Manager, SM, SA):\nBrief description of responsibilities for the position that were discussed during the interview:\nNext steps that were determined based on the interview results (e.g., test task, next call, etc.): \n{{ $json['Extracred Text'] }}\n\nexample:\nWe had an interview call with ...\nCandidates: ...\nDuring the interview ...\n\nResponsibilities:\n-\n-\n-\n...\n-\n\nThe client was engaged by the LG manager ...\nSM ...\nSA ...\n\n**Выведи только извлеченную информацию в запрошенном структурированном формате, без каких-либо вводных или пояснительных текстов**"},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.5,"position":[2120,-380],"id":"773e3a26-5c89-4c85-a8aa-1ea4447daf29","name":"Basic LLM Chain"},{"parameters":{"model":"google/gemma-3-4b-it:free","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[2080,-220],"id":"42890656-06e3-40d0-b12c-ed16160609a4","name":"OpenRouter Chat Model","credentials":{"openRouterApi":{"id":"2TbftrJQ6ppFHQ2j","name":"OpenRouter pr account"}}},{"parameters":{"resource":"message","guildId":{"__rl":true,"value":"732698343951695963","mode":"list","cachedResultName":"Remote Helpers","cachedResultUrl":"https://discord.com/channels/732698343951695963"},"channelId":{"__rl":true,"value":"1121723393469845555","mode":"id"},"content":"={{ $json.text }}","options":{}},"type":"n8n-nodes-base.discord","typeVersion":2,"position":[2680,-380],"id":"88aa683c-b728-4b6e-998f-bd6fb3f29f6c","name":"Discord","webhookId":"0dd4c953-a86e-41eb-9258-01d9a011e87a","credentials":{"discordBotApi":{"id":"ATASGOhmkeLExW1R","name":"Discord Bot account"}}},{"parameters":{"content":"## Беремо E-mail","height":80,"width":200},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[100,-460],"id":"f7fa30e5-c62d-4858-85c0-7fe0bb504f22","name":"Sticky Note"},{"parameters":{"content":"## Дістаємо прикріплене повідомлення з транскрибацією","height":80,"width":680},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[1020,-500],"id":"43cea6ee-a412-401a-a1ff-d9361a5fe550","name":"Sticky Note1"},{"parameters":{"content":"## Надсилаємо в дс","height":80},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[2600,-480],"id":"095dcaee-5d71-4b42-8fe9-324a292b5099","name":"Sticky Note3"},{"parameters":{"content":"","height":620,"width":3040,"color":7},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-80,-600],"id":"a4ee1c7d-dbf4-46df-95f0-c62265481478","name":"Sticky Note4"},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"value":"https://docs.google.com/spreadsheets/d/1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q/edit?usp=sharing","mode":"url"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Emails","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Message ID":"={{ $json.messageId }}","Extracted Link":"={{ $json.googleDocUrl }}","Date":"={{ $json.date }}","Only link":"={{ $json.documentId }}","Company name":"={{ $json.meetingName }}"},"matchingColumns":["Message ID"],"schema":[{"id":"Message ID","displayName":"Message ID","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Date","displayName":"Date","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Extracted Link","displayName":"Extracted Link","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Only link","displayName":"Only link","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Extracred Text","displayName":"Extracred Text","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Company name","displayName":"Company name","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[1200,-380],"id":"65d91d9b-d718-48f3-83f9-29c875351269","name":"Google Sheets","credentials":{"googleSheetsOAuth2Api":{"id":"JWf1dYTj83NVJtf5","name":"Google Sheets account 2"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"72fe7e18-1f18-4b8e-a189-57621a7aeadf","leftValue":"={{ $json.html }}","rightValue":"https://docs.google.com/document/d/","operator":{"type":"string","operation":"contains"}},{"id":"f7056304-9a5e-4e6a-8b9f-5d417e223aba","leftValue":"={{ $json.headers.date }}","rightValue":"","operator":{"type":"dateTime","operation":"exists","singleValue":true}},{"id":"b8179312-00d0-4992-837b-cf7309afcf62","leftValue":"={{ $json.id }}","rightValue":"","operator":{"type":"string","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[420,-360],"id":"86cc99d7-7921-4c3b-af5c-08e3fbbda9cd","name":"If"},{"parameters":{"jsCode":"// Получаем все входящие элементы\nconst items = $input.all();\n\n// Преобразуем каждый входящий элемент\nconst results = items.map(item => {\n  // Извлекаем необходимые поля\n  const subject = item.json.subject || \"\";\n  const date = item.json.headers?.date || item.json.date || \"\";\n  const messageId = item.json.id || \"\";\n  const html = item.json.html || \"\";\n  const text = item.json.text || \"\";\n\n  // Извлекаем ссылку на Google Документ из источника (используем html, а если его нет — text)\n  let googleDocUrl = null;\n  let documentId = null;\n  {\n    const sourceForDoc = html || text;\n    const docRegex = /(https:\\/\\/docs\\.google\\.com\\/document\\/d\\/[\\w-]+)/;\n    const docMatch = sourceForDoc.match(docRegex);\n    if (docMatch && docMatch[0]) {\n      googleDocUrl = docMatch[0];\n      // Удаляем \"/edit\" и параметры, если они присутствуют\n      googleDocUrl = googleDocUrl.split('/edit')[0].split('?')[0];\n      \n      // Извлекаем ID документа из URL\n      const idRegex = /\\/d\\/([\\w-]+)/;\n      const idMatch = googleDocUrl.match(idRegex);\n      documentId = idMatch && idMatch[1] ? idMatch[1] : null;\n    }\n  }\n\n  // Название встречи равно значению subject\n  const meetingName = subject;\n\n  // Форматируем дату в ISO-формат, если возможно\n  let formattedDate = date;\n  if (date) {\n    try {\n      formattedDate = new Date(date).toISOString();\n    } catch (e) {\n      // В случае ошибки оставляем исходное значение\n    }\n  }\n\n  // Собираем итоговый объект с извлечёнными данными\n  const extractedData = {\n    messageId: messageId,\n    date: formattedDate,\n    googleDocUrl: googleDocUrl,\n    documentId: documentId,\n    meetingName: meetingName // Извлекаем название встречи из subject\n  };\n\n  return { json: extractedData };\n});\n\n// Возвращаем массив объектов\nreturn results;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[720,-380],"id":"f5e384d4-ac6a-4ebf-b97d-58f830e7a778","name":"Code"},{"parameters":{"operation":"get","documentURL":"={{ $json[\"Only link\"] }}"},"type":"n8n-nodes-base.googleDocs","typeVersion":2,"position":[1440,-380],"id":"1177a435-373e-467e-a239-88511e1d3cf0","name":"Google Docs","credentials":{"googleDocsOAuth2Api":{"id":"UGRtdL18RWBWUBkv","name":"Google Docs Sales API"}}},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"value":"1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q","mode":"list","cachedResultName":"Processed Emails","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Emails","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Only link":"={{ $json.documentId }}","Extracred Text":"={{ $json.content }}"},"matchingColumns":["Only link"],"schema":[{"id":"Message ID","displayName":"Message ID","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"Date","displayName":"Date","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"Extracted Link","displayName":"Extracted Link","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"Only link","displayName":"Only link","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Extracred Text","displayName":"Extracred Text","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[1640,-380],"id":"1470dcfc-a460-4b3c-9e5e-f19efeeae79c","name":"Google Sheets1","credentials":{"googleSheetsOAuth2Api":{"id":"JWf1dYTj83NVJtf5","name":"Google Sheets account 2"}}},{"parameters":{"jsCode":"// Получаем все входящие элементы\nconst items = $input.all();\n\n// Обрабатываем каждый входящий элемент\nconst results = items.map(item => {\n  const jsonItem = item.json;\n  \n  // Деструктурируем объект, чтобы \"вытащить\" meetingName отдельно,\n  // а остальные поля оставить в restFields\n  const { meetingName, ...restFields } = jsonItem;\n  \n  // Подготовим переменную для \"очищенного\" названия встречи\n  let cleanedMeetingName = meetingName || \"\";\n  \n  // Шаг за шагом удаляем нежелательные подстроки:\n  cleanedMeetingName = cleanedMeetingName\n    // 1. Удаляем \"Meeting records:\" или \"Meeting records from\"\n    .replace(/Meeting\\s*records\\s*:?(\\s*from)?\\s*/gi, \"\")\n    // 2. Удаляем \"- Remote Helpers\" или \"-Remote Helpers\"\n    .replace(/-\\s*Remote\\s*Helpers\\s*/gi, \"\")\n    // 3. Если нужно убрать точную дату \"Apr 11, 2025\"\n    .replace(/Apr\\s*11,\\s*2025/gi, \"\")\n    // 4. Дополнительно можно убрать кавычки \"“\" и \"”\", если они встречаются\n    .replace(/[“”]/g, \"\")\n    // В конце подчищаем лишние пробелы\n    .trim();\n  \n  // Формируем итоговый объект:\n  // - Возвращаем все исходные поля из restFields\n  // - Перезаписываем поле meetingName \"очищенным\" значением\n  const finalData = {\n    ...restFields,\n    meetingName: cleanedMeetingName\n  };\n  \n  return { json: finalData };\n});\n\n// Возвращаем массив объектов\nreturn results;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[980,-380],"id":"03da4aa1-3f64-4c12-8352-aa4fa1404fe2","name":"Code1"},{"parameters":{"documentId":{"__rl":true,"value":"1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q","mode":"list","cachedResultName":"Processed Emails","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Emails","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q/edit#gid=0"},"filtersUI":{"values":[{"lookupColumn":"Company name","lookupValue":"={{ $('Google Sheets').item.json[\"Company name\"] }}"},{"lookupColumn":"Message ID","lookupValue":"={{ $('Google Sheets').item.json[\"Message ID\"] }}"},{"lookupColumn":"Date","lookupValue":"={{ $('Google Sheets').item.json.Date }}"},{"lookupColumn":"Only link","lookupValue":"={{ $('Google Sheets').item.json[\"Only link\"] }}"},{"lookupColumn":"Extracted Link","lookupValue":"={{ $('Google Sheets').item.json[\"Extracted Link\"] }}"}]},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[1900,-380],"id":"2a22224f-3d5b-4cb6-8a06-3075853595ef","name":"Google Sheets2","credentials":{"googleSheetsOAuth2Api":{"id":"JWf1dYTj83NVJtf5","name":"Google Sheets account 2"}}},{"parameters":{"operation":"getAll","calendar":{"__rl":true,"value":"lg@rh-s.com","mode":"list","cachedResultName":"lg@rh-s.com"},"timeMax":"={{ $now.plus({ hours: 12 }) }}","options":{}},"type":"n8n-nodes-base.googleCalendar","typeVersion":1.3,"position":[220,-140],"id":"bf662b3c-52e3-4922-9625-f571f1b94981","name":"Google Calendar","credentials":{"googleCalendarOAuth2Api":{"id":"dCmWpdsYiSYHC7XA","name":"Google Calendar account"}}},{"parameters":{"rule":{"interval":[{}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-420,900],"id":"e31bb397-adde-4bb6-b659-918afe70c665","name":"Schedule Trigger"},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"value":"1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q","mode":"list","cachedResultName":"Processed Emails","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Emails","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Date":"={{ $json.start.dateTime }}","Company name":"={{ $json.summary }}","Message ID":"={{ $json.id }}","Extracted Link":"={{ $json.googleDocUrl }}","Only link":"={{ $json.documentId }}","Calendar description":"={{ $json.description }}","Manager":"={{ $json.Manager }}","Comment":"={{ $json.Comment }}","Company Info":"={{ $json['Company Info'] }}","Target Audience":"={{ $json['Target Audience'] }}","Country-Location":"={{ $json['Country-Location'] }}","Speciality":"={{ $json.Speciality }}","Contact person":"={{ $json['Contact Person'] }}","Company website":"={{ $json['Company Website'] }}"},"matchingColumns":["Date"],"schema":[{"id":"Message ID","displayName":"Message ID","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Date","displayName":"Date","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Extracted Link","displayName":"Extracted Link","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Only link","displayName":"Only link","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Extracred Text","displayName":"Extracred Text","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"Company name","displayName":"Company name","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Calendar description","displayName":"Calendar description","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Company website","displayName":"Company website","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Contact person","displayName":"Contact person","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Speciality","displayName":"Speciality","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Country-Location","displayName":"Country-Location","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Target Audience","displayName":"Target Audience","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Company Info","displayName":"Company Info","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Comment","displayName":"Comment","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Manager","displayName":"Manager","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[1300,900],"id":"cce6fd81-a6b7-4813-8b9a-789cf0687ef1","name":"Google Sheets4","credentials":{"googleSheetsOAuth2Api":{"id":"JWf1dYTj83NVJtf5","name":"Google Sheets account 2"}}},{"parameters":{"jsCode":"// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn $input.all();"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[480,-120],"id":"6436cf39-15de-4836-b826-d928c0e77335","name":"Code2"},{"parameters":{"functionCode":"const events = $json.events || [];\nconst results = [];\n\n// Если есть события, возвращаем по одному элементу на событие\nif (events.length > 0) {\n  for (const event of events) {\n    const eventSummary = event.summary || '';\n    const eventDate = event.start ? (event.start.dateTime || event.start.date) : '';\n    results.push({\n      json: {\n        ...$json,\n        calendarEventName: eventSummary,\n        calendarEventDate: eventDate\n      }\n    });\n  }\n} else {\n  // Если событий нет, возвращаем один элемент с пустыми данными\n  results.push({\n    json: {\n      ...$json,\n      calendarEventName: '',\n      calendarEventDate: ''\n    }\n  });\n}\n\nreturn results;\n"},"name":"Format Date","type":"n8n-nodes-base.function","typeVersion":1,"position":[780,-140],"id":"ff7e545c-74c7-47b4-8a0f-f584892d4bf6"},{"parameters":{"functionCode":"// Функция для округления времени до ближайшего полчасового интервала (с использованием UTC)\n// Если минуты меньше 30, округляем до :30, иначе до начала следующего часа\nfunction getHalfHourBlockUTC(dateString) {\n  const dateObj = new Date(dateString);\n  if (isNaN(dateObj.getTime())) return \"\";\n  let hours = dateObj.getUTCHours();\n  const minutes = dateObj.getUTCMinutes();\n  \n  if (minutes < 30) {\n    return `${String(hours).padStart(2, '0')}:30`;\n  } else {\n    hours = hours + 1;\n    if (hours === 24) {\n      hours = 0;\n    }\n    return `${String(hours).padStart(2, '0')}:00`;\n  }\n}\n\n// Этап 1. Получаем все входящие элементы и проводим обработку полей summary, description и end\nconst items = $input.all();\n\n// Проверяем, что items – массив\nif (!Array.isArray(items)) {\n  throw new Error(\"Ожидался массив входящих элементов\");\n}\n\nconst tempResults = items.map(item => {\n  // Если структура не соответствует ожиданиям, пропускаем элемент\n  if (!item || !item.json) return null;\n  \n  const jsonData = item.json;\n  \n  // Извлекаем поля summary и description, остальные поля сохраняем в restFields\n  const summary = jsonData.summary || \"\";\n  const description = jsonData.description || \"Нет описания\";\n  \n  // Очищаем поле summary: удаляем подстроку \"- Remote Helpers\" (без учета регистра)\n  let cleanedSummary = summary.replace(/-\\s*Remote\\s*Helpers\\s*/gi, \"\").trim();\n  \n  // Получаем оригинальное время окончания из jsonData.end\n  let originalEnd = \"\";\n  if (jsonData.end) {\n    originalEnd = jsonData.end.dateTime || jsonData.end.date || \"\";\n  }\n  \n  // Форматируем время окончания в формате HH:MM (округление до ближайшего полчасового интервала)\n  const formattedTime = originalEnd ? getHalfHourBlockUTC(originalEnd) : \"\";\n  \n  // Формируем итоговый объект.\n  // Сохраняем оригинальное время окончания (_originalEnd) для фильтрации и сортировки.\n  const finalData = {\n    ...jsonData,\n    summary: cleanedSummary,\n    description: description,\n    formattedTime: formattedTime,  // переименованное значение end\n    _originalEnd: originalEnd\n  };\n  \n  return { json: finalData };\n})\n// Фильтруем элементы, у которых не удалось сформировать объект\n.filter(item => item !== null);\n\n// Этап 2. Фильтрация дубликатов с использованием комбинации summary и округленного времени (UTC)\n// Используем _originalEnd для определения уникальности\nconst seenKeys = new Set();\nconst uniqueResults = tempResults.filter(item => {\n  const currentSummary = item.json.summary;\n  const originalEndTime = item.json._originalEnd;\n  \n  // Если время окончания задано, округляем его по UTC, иначе оставляем пустую строку\n  const normalizedTime = originalEndTime ? getHalfHourBlockUTC(originalEndTime) : \"\";\n  \n  // Если у события есть уникальный id, используем его; иначе – комбинацию summary и нормализованного времени\n  const uniqueId = item.json.id;\n  const dedupKey = uniqueId ? uniqueId : `${currentSummary}__${normalizedTime}`;\n  \n  if (seenKeys.has(dedupKey)) {\n    return false;\n  } else {\n    seenKeys.add(dedupKey);\n    return true;\n  }\n});\n\n// Этап 3. Сортировка по оригинальному времени окончания (используя _originalEnd)\nuniqueResults.sort((a, b) => {\n  const timeA = new Date(a.json._originalEnd);\n  const timeB = new Date(b.json._originalEnd);\n  return timeA - timeB;\n});\n\n// Удаляем вспомогательное поле _originalEnd из финального вывода\nconst finalResults = uniqueResults.map(item => {\n  delete item.json._originalEnd;\n  return item;\n});\n\n// Возвращаем итоговый массив уникальных, отсортированных по времени окончания\nreturn finalResults;\n"},"name":"Extract Calendar Data","type":"n8n-nodes-base.function","typeVersion":1,"position":[140,1020],"id":"272b2cef-7265-4d1d-a867-0f6f2a566a3f"},{"parameters":{"operation":"getAll","limit":10,"simple":false,"filters":{"q":"subject:Meeting records:","sender":"meetings-noreply@google.com"},"options":{"downloadAttachments":true}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[-140,780],"id":"f72f84c9-78be-4ea7-bcc8-2e5089a274a7","name":"Gmail1","webhookId":"fd589834-de5f-4a43-9809-04de4bcc6b08","credentials":{"gmailOAuth2":{"id":"s09JnuCcx9ezdMBU","name":"Sales N8N gmail "}}},{"parameters":{"operation":"getAll","calendar":{"__rl":true,"value":"lg@rh-s.com","mode":"list","cachedResultName":"lg@rh-s.com"},"limit":5,"timeMin":"={{ $now.minus( {hours: 2}) }}","timeMax":"={{ $now }}","options":{}},"type":"n8n-nodes-base.googleCalendar","typeVersion":1.3,"position":[-140,1000],"id":"9aae3266-5e50-4467-890e-b84822edc72e","name":"Google Calendar1","credentials":{"googleCalendarOAuth2Api":{"id":"dCmWpdsYiSYHC7XA","name":"Google Calendar account"}}},{"parameters":{"mode":"combine","combineBy":"combineByPosition","numberInputs":3,"options":{}},"type":"n8n-nodes-base.merge","typeVersion":3,"position":[820,900],"id":"0be5e4dd-93b5-4072-80fb-3f7b2ab0eb8b","name":"Merge"},{"parameters":{"jsCode":"// Получаем все входящие элементы\nconst items = $input.all();\n\n// Преобразуем каждый входящий элемент\nconst results = items.map(item => {\n  // Извлекаем необходимые поля\n  const subject = item.json.subject || \"\";\n  const date = item.json.headers?.date || item.json.date || \"\";\n  const messageId = item.json.id || \"\";\n  const html = item.json.html || \"\";\n  const text = item.json.text || \"\";\n\n  // Извлекаем ссылку на Google Документ из источника (используем html, а если его нет — text)\n  let googleDocUrl = null;\n  let documentId = null;\n  {\n    const sourceForDoc = html || text;\n    const docRegex = /(https:\\/\\/docs\\.google\\.com\\/document\\/d\\/[\\w-]+)/;\n    const docMatch = sourceForDoc.match(docRegex);\n    if (docMatch && docMatch[0]) {\n      googleDocUrl = docMatch[0];\n      // Удаляем \"/edit\" и параметры, если они присутствуют\n      googleDocUrl = googleDocUrl.split('/edit')[0].split('?')[0];\n      \n      // Извлекаем ID документа из URL\n      const idRegex = /\\/d\\/([\\w-]+)/;\n      const idMatch = googleDocUrl.match(idRegex);\n      documentId = idMatch && idMatch[1] ? idMatch[1] : null;\n    }\n  }\n\n  // Название встречи равно значению subject\n  const meetingName = subject;\n\n  // Форматируем дату в ISO-формат, если возможно\n  let formattedDate = date;\n  if (date) {\n    try {\n      formattedDate = new Date(date).toISOString();\n    } catch (e) {\n      // В случае ошибки оставляем исходное значение\n    }\n  }\n\n  // Собираем итоговый объект с извлечёнными данными\n  const extractedData = {\n    messageId: messageId,\n    date: formattedDate,\n    googleDocUrl: googleDocUrl,\n    documentId: documentId,\n    meetingName: meetingName // Извлекаем название встречи из subject\n  };\n\n  return { json: extractedData };\n});\n\n// Возвращаем массив объектов\nreturn results;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[140,760],"id":"ba8759c0-3aa5-43a9-9de2-7db91dbb9931","name":"Code3"},{"parameters":{"jsCode":"// Функция для округления времени до ближайшего полчасового интервала (с использованием UTC)\n// Если минуты меньше 30, округляем до :30, иначе до начала следующего часа\nfunction getHalfHourBlockUTC(dateString) {\n  const dateObj = new Date(dateString);\n  if (isNaN(dateObj.getTime())) return \"\";\n  let hours = dateObj.getUTCHours();\n  const minutes = dateObj.getUTCMinutes();\n  \n  if (minutes < 30) {\n    return `${String(hours).padStart(2, '0')}:30`;\n  } else {\n    hours = hours + 1;\n    if (hours === 24) {\n      hours = 0;\n    }\n    return `${String(hours).padStart(2, '0')}:00`;\n  }\n}\n\n// Этап 1. Получаем все входящие элементы и проводим обработку полей summary, description и date\nconst items = $input.all();\n\n// Проверяем, что items – массив\nif (!Array.isArray(items)) {\n  throw new Error(\"Ожидался массив входящих элементов\");\n}\n\nconst tempResults = items.map(item => {\n  // Если структура не соответствует ожиданиям, пропускаем элемент\n  if (!item || !item.json) return null;\n  \n  const jsonData = item.json;\n  \n  // Извлекаем поля summary и description, остальные поля сохраняем в restFields\n  const summary = jsonData.summary || \"\";\n  const description = jsonData.description || \"Нет описания\";\n  \n  // Очищаем поле summary: удаляем подстроку \"- Remote Helpers\" (без учета регистра)\n  let cleanedSummary = summary.replace(/-\\s*Remote\\s*Helpers\\s*/gi, \"\").trim();\n  \n  // Получаем оригинальное время события из jsonData.date\n  const originalTime = jsonData.date || \"\";\n  \n  // Форматируем время в формате HH:MM (округление до ближайшего полчасового интервала)\n  const formattedTime = originalTime ? getHalfHourBlockUTC(originalTime) : \"\";\n  \n  // Формируем итоговый объект.\n  // Сохраняем оригинальное время (_originalTime) для фильтрации и сортировки.\n  const finalData = {\n    ...jsonData,\n    summary: cleanedSummary,\n    description: description,\n    formattedTime: formattedTime,  // добавленное поле с округленным временем\n    _originalTime: originalTime\n  };\n  \n  return { json: finalData };\n})\n// Фильтруем элементы, у которых не удалось сформировать объект\n.filter(item => item !== null);\n\n// Этап 2. Фильтрация дубликатов с использованием комбинации summary и округленного времени (UTC)\nconst seenKeys = new Set();\nconst uniqueResults = tempResults.filter(item => {\n  const currentSummary = item.json.summary;\n  const originalTimeValue = item.json._originalTime;\n  \n  // Если время события задано, округляем его по UTC, иначе оставляем пустую строку\n  const normalizedTime = originalTimeValue ? getHalfHourBlockUTC(originalTimeValue) : \"\";\n  \n  // Если у события есть уникальный id, используем его; иначе – комбинацию summary и нормализованного времени\n  const uniqueId = item.json.id;\n  const dedupKey = uniqueId ? uniqueId : `${currentSummary}__${normalizedTime}`;\n  \n  if (seenKeys.has(dedupKey)) {\n    return false;\n  } else {\n    seenKeys.add(dedupKey);\n    return true;\n  }\n});\n\n// Этап 3. Сортировка по оригинальному времени события (используя _originalTime)\nuniqueResults.sort((a, b) => {\n  const timeA = new Date(a.json._originalTime);\n  const timeB = new Date(b.json._originalTime);\n  return timeA - timeB;\n});\n\n// Этап 4. Фильтрация событий, оставляем только те, которые произошли в течение последнего часа\nconst oneHour = 60 * 60 * 2 * 1000; // 1 час в миллисекундах\nconst now = new Date();\n\nconst filteredResults = uniqueResults.filter(item => {\n  const eventTime = new Date(item.json.date);\n  // Проверяем, что событие уже прошло и разница между текущим временем и временем события не превышает 1 час\n  return eventTime <= now && (now - eventTime) <= oneHour;\n});\n\n// Удаляем вспомогательное поле _originalTime из финального вывода\nconst finalResults = filteredResults.map(item => {\n  delete item.json._originalTime;\n  return item;\n});\n\n// Возвращаем итоговый массив уникальных, отсортированных по времени события,\n// которые произошли в течение последнего часа\nreturn finalResults;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[380,720],"id":"6fdfa22d-2be9-42e3-bccd-95cee82c41dd","name":"Code4"},{"parameters":{"model":"google/gemma-3-4b-it:free","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[2540,940],"id":"0ec262dc-e3c4-425e-b272-65386def20db","name":"OpenRouter Chat Model1","credentials":{"openRouterApi":{"id":"WrcI4NDeH0Hyl0Z2","name":"OpenRouter DD account"}}},{"parameters":{"operation":"get","documentURL":"={{ $json[\"Only link\"] }}"},"type":"n8n-nodes-base.googleDocs","typeVersion":2,"position":[1540,900],"id":"3334e1ca-8ea5-47b7-82a0-bcbb897198c9","name":"Google Docs1","credentials":{"googleDocsOAuth2Api":{"id":"UGRtdL18RWBWUBkv","name":"Google Docs Sales API"}}},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"value":"1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q","mode":"list","cachedResultName":"Processed Emails","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Emails","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q/edit#gid=0"},"columns":{"mappingMode":"defineBelow","value":{"Only link":"={{ $json.documentId }}","Extracred Text":"={{ $json.content }}"},"matchingColumns":["Only link"],"schema":[{"id":"Message ID","displayName":"Message ID","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"Date","displayName":"Date","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"Extracted Link","displayName":"Extracted Link","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"Only link","displayName":"Only link","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false},{"id":"Extracred Text","displayName":"Extracred Text","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[2000,900],"id":"1c243d0f-0868-472a-8400-dbe86cb79233","name":"Google Sheets3","credentials":{"googleSheetsOAuth2Api":{"id":"JWf1dYTj83NVJtf5","name":"Google Sheets account 2"}}},{"parameters":{"documentId":{"__rl":true,"value":"1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q","mode":"list","cachedResultName":"Processed Emails","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q/edit?usp=drivesdk"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Emails","cachedResultUrl":"https://docs.google.com/spreadsheets/d/1Nk3nPUBoHUEAJCNT3Cx0Vn0Rcopy7znSixDwEufZa8Q/edit#gid=0"},"filtersUI":{"values":[{"lookupColumn":"Company name","lookupValue":"={{ $('Google Sheets4').item.json[\"Company name\"] }}"},{"lookupColumn":"Message ID","lookupValue":"={{ $('Google Sheets4').item.json[\"Message ID\"] }}"},{"lookupColumn":"Date","lookupValue":"={{ $('Google Sheets4').item.json.Date }}"},{"lookupColumn":"Only link","lookupValue":"={{ $('Google Sheets4').item.json[\"Only link\"] }}"},{"lookupColumn":"Extracted Link","lookupValue":"={{ $('Google Sheets4').item.json[\"Extracted Link\"] }}"},{"lookupColumn":"Calendar description","lookupValue":"={{ $('Google Sheets4').item.json[\"Calendar description\"] }}"},{"lookupColumn":"Company website","lookupValue":"={{ $('Google Sheets4').item.json['Company website'] }}"},{"lookupColumn":"Contact person","lookupValue":"={{ $('Google Sheets4').item.json['Contact person'] }}"},{"lookupColumn":"Speciality","lookupValue":"={{ $('Google Sheets4').item.json.Speciality }}"},{"lookupColumn":"Country-Location","lookupValue":"={{ $('Google Sheets4').item.json['Country-Location'] }}"},{"lookupColumn":"Target Audience","lookupValue":"={{ $('Google Sheets4').item.json['Target Audience'] }}"},{"lookupColumn":"Company Info","lookupValue":"={{ $('Google Sheets4').item.json['Company Info'] }}"},{"lookupColumn":"Comment","lookupValue":"={{ $('Google Sheets4').item.json.Comment }}"},{"lookupColumn":"Manager","lookupValue":"={{ $('Google Sheets4').item.json.Manager }}"}]},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.5,"position":[2220,900],"id":"e480adf8-d6c7-48b2-b03c-03692dc61e5d","name":"Google Sheets5","alwaysOutputData":false,"credentials":{"googleSheetsOAuth2Api":{"id":"JWf1dYTj83NVJtf5","name":"Google Sheets account 2"}}},{"parameters":{"jsCode":"// Получаем все входящие элементы\nconst items = $input.all();\n\n// Создаем копию массива и разворачиваем его\nconst reversedItems = items.slice().reverse();\n\n// Возвращаем перевернутый массив\nreturn reversedItems;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1760,900],"id":"8217897a-4188-476a-bd58-8eaa5bb3dbf0","name":"Code5"},{"parameters":{"functionCode":"/**\n * Функция parseInput принимает входной текст, где каждая строка имеет формат \"Ключ: Значение\".\n * Обрабатываются только строки, ключ которых соответствует одному из заданных полей.\n *\n * Заданные поля (колонки):\n *   Company Website, Contact Person, Speciality, Country-Location,\n *   Target Audience, Company Info, Comment, Manager\n */\nfunction parseInput(input) {\n  const fields = [\n    'Company Website',\n    'Contact Person',\n    'Speciality',\n    'Country-Location',\n    'Target Audience',\n    'Company Info',\n    'Comment',\n    'Manager'\n  ];\n  \n  // Инициализируем объект, где каждому полю соответствует пустая строка по умолчанию.\n  let result = {};\n  fields.forEach(field => {\n    result[field] = '';\n  });\n  \n  // Регулярное выражение для поиска строк вида \"Ключ: Значение\"\n  const regex = /^([^:]+):\\s*(.*)$/gm;\n  let match;\n  while ((match = regex.exec(input)) !== null) {\n    const key = match[1].trim();\n    const value = match[2].trim();\n    \n    // Если ключ входит в список нужных полей, обновляем его значение\n    if (fields.includes(key)) {\n      result[key] = value;\n    }\n  }\n  \n  return result;\n}\n\n// Обработка динамического входного массива, где каждый элемент должен содержать свойство \"text\"\nconst newItems = items.map(item => {\n  // Если в элементе отсутствует свойство \"text\", возвращаем его без изменений\n  if (!item.json.text) return item;\n  \n  const parsedData = parseInput(item.json.text);\n  // Объединяем результат парсинга с остальными колонками исходного объекта.\n  const newJson = { ...item.json, ...parsedData };\n  \n  return { json: newJson };\n});\n\n// Возвращаем данные в формате, ожидаемом n8n: массив объектов с полем json\nreturn newItems;\n"},"name":"Extract Calendar Data1","type":"n8n-nodes-base.function","typeVersion":1,"position":[1060,900],"id":"046ba4dc-f23e-4a99-bad6-f3ae2c66f824"},{"parameters":{"promptType":"define","text":"=Доставай из {{ $json.description }} следующие значения и выводи каждую информацию как отдельный столбик (поле) не пиши в табличном виде, пиши в формате название поля: название того что в ней\n\n\"Company Website\": extractField(description, \"Company Website\"), (НЕ ПИШИ rh-s.com, если другой ссылки нету - оставь пустоту)\n\"Contact Person\": extractField(description, \"Contact Person\"),\nSpeciality\": extractField(description, \"Speciality\"),\nCountry-Location\": extractField(description, \"Country-Location\"),\nTarget Audience\": extractField(description, \"Target Audience\"),\nCompany Info\": extractField(description, \"Company Info\"),\nComment\": extractField(description, \"Comment\"),\nManager\": extractField(description, \"Manager\") \n\n\nПример \nCompany Website: example.com\n\n\n\n\n"},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.5,"position":[420,1220],"id":"e9784c31-8f30-465f-a8a0-fa2d1a3b9d18","name":"Basic LLM Chain2"},{"parameters":{"model":"google/gemma-3-27b-it:free","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[320,1340],"id":"92888f06-62c5-42d0-a15a-1576f0201b54","name":"OpenRouter Chat Model2","credentials":{"openRouterApi":{"id":"bAp7bln2GIj8yhFs","name":"OpenRouter Dev account"}}},{"parameters":{"content":"# Sales Workflow\n# This workflow automates data processing from various sources, including Gmail, Google Calendar, Google Sheets, and Google Docs. It gathers information \n# from emails, calendar events, and documents, processes it using a language model (LLM), then updates Google Sheets and sends a message to Discord.\n","height":980,"width":3940,"color":6},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-460,520],"id":"a868f1a9-bc78-43a9-9329-cb5bab3e319a","name":"Sticky Note2"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"5a742060-4452-4221-8d68-05aa654ef2e2","leftValue":"={{ $json.formattedTime }}","rightValue":"={{ $json.summary }}","operator":{"type":"string","operation":"empty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[640,740],"id":"128001cc-1484-4bff-ab0f-59873fe272c0","name":"If1"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[1300,720],"id":"919e9c42-d450-4b21-a4cf-1c7560b356ad","name":"No Operation, do nothing"},{"parameters":{"resource":"message","guildId":{"__rl":true,"value":"732698343951695963","mode":"list","cachedResultName":"Remote Helpers","cachedResultUrl":"https://discord.com/channels/732698343951695963"},"channelId":{"__rl":true,"value":"1121723393469845555","mode":"id"},"content":"={{ $json.text }}","options":{}},"type":"n8n-nodes-base.discord","typeVersion":2,"position":[3280,640],"id":"6fa31f33-b0d9-49c8-b188-57d5673b3cb6","name":"AI FM","webhookId":"0dd4c953-a86e-41eb-9258-01d9a011e87a","credentials":{"discordBotApi":{"id":"ATASGOhmkeLExW1R","name":"Discord Bot account"}}},{"parameters":{"resource":"message","guildId":{"__rl":true,"value":"732698343951695963","mode":"list","cachedResultName":"Remote Helpers","cachedResultUrl":"https://discord.com/channels/732698343951695963"},"channelId":{"__rl":true,"value":"1285235052615176263","mode":"id"},"content":"={{ $json.text }}","options":{}},"type":"n8n-nodes-base.discord","typeVersion":2,"position":[3280,920],"id":"3877fada-235f-4341-8ca7-460460c361a0","name":"Sales Comment","webhookId":"0dd4c953-a86e-41eb-9258-01d9a011e87a","credentials":{"discordBotApi":{"id":"ATASGOhmkeLExW1R","name":"Discord Bot account"}}},{"parameters":{"model":"google/gemma-3-4b-it:free","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenRouter","typeVersion":1,"position":[2540,1180],"id":"7e106b65-5554-4770-bfbb-f228a527a44c","name":"OpenRouter Chat Model3","credentials":{"openRouterApi":{"id":"WrcI4NDeH0Hyl0Z2","name":"OpenRouter DD account"}}},{"parameters":{"jsCode":"return [\n  {\n    json: {\n      text: (items[0].json.text || '') + ' ' + (items[1].json.text || '')\n    }\n  }\n];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3100,960],"id":"29a98b0d-7749-470e-9d30-41ff86e146fd","name":"Code6"},{"parameters":{"resource":"message","guildId":{"__rl":true,"value":"732698343951695963","mode":"list","cachedResultName":"Remote Helpers","cachedResultUrl":"https://discord.com/channels/732698343951695963"},"sendTo":"user","userId":{"__rl":true,"value":"707137679971844176","mode":"id"},"content":"={{ $json.joinedText }}","options":{}},"type":"n8n-nodes-base.discord","typeVersion":2,"position":[3340,1200],"id":"4f28b797-84f6-42e5-a07b-bcc461358bb9","name":"Sabina","webhookId":"0dd4c953-a86e-41eb-9258-01d9a011e87a","credentials":{"discordBotApi":{"id":"ATASGOhmkeLExW1R","name":"Discord Bot account"}}},{"parameters":{"promptType":"define","text":"=Familiarize yourself with the list of employees and their roles who may be mentioned from our side in the transcription (they may not be):\n    * Sales Manager: Sona G, Niko K\n    * Lead generator: Anna Bu, Anahit O, Evgeniya N, Firuza D, Irina Kl, Karina N, Liliia N, Mykhailo Ne, Olena A, Sofiya L, Yelyzaveta P\n    * Financial manager: Daria Y\n    * Front End Developer: Artem S, Maxim S\n    * Graphic Designer: Anastasiya P, Natalia L\n    * Illustrator: Vilhelm S\n    * PPC Specialist: Ekaterina E\n    * prompt engineer: Danylo I, Mykola S\n    * Recruiter: Anastasiya F, Ganna A, Sabina H\n    * UI UX designer: Kristina Y\n    * Video Editor: Dariya A, Svyatoslav Pod\n\nFind mentions of employee names from the list above in the transcription. Important: search specifically for full names or last names as listed and insert them into the appropriate fields.\nIn the Contact Person field, put the name from the call that is not found in the employee list I provided. If there is no information for any field, leave an empty line after \"example: \".\n\nExtract information from the following call transcription and fill in the report template below.\n\nWhat you need to add to the \"Comment: \" - Summarize the call that took place with a client using this call script. Write a paragraph emphasizing client's hiring needs - the position that he wants to fill. End the paragraph with the agreed future steps. Also, write separately the responsibilities and skills required for the position that the client wants to fill.\n\nCall Transcription:\n{{ $json['Extracred Text'] }}\n\nReport Template:\nCompany Name: {{ $json['Company name'] }}\n\nCompany Website: {{ $json['Company website'] }}\n\nContact Person: {{ $json['Contact person'] }}\n\nSpeciality: {{ $json.Speciality }}\n\nCountry-Location: {{ $json['Country-Location'] }}\n\nTarget Audience: {{ $json['Target Audience'] }}\n\nCompany Info: {{ $json['Company Info'] }}\n\nComment: \n\nFormat the answer exactly according to the template, leaving an **empty** line between the field and the value."},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.5,"position":[2460,820],"id":"b1406f21-66af-4629-a793-824679538a41","name":"Start of report"},{"parameters":{"promptType":"define","text":"=find in the Call Transcription information, about Immediate Requirement, Professional Skills, Software, Responsibilities, Future Needs, Status by the position(s) (possible/impossible), Next Step, Next Contact Day and Planned Start Date.\n\n**If, and ONLY if, a specific piece of information for a field is DIRECTLY MENTIONED in the Call Transcription, then extract it and write it under the corresponding field in the template.**\n\n**If a field's information is NOT mentioned at all in the Call Transcription, then leave that entire field in the template COMPLETELY EMPTY.** This means you should write the field name followed by a colon, and then **immediately insert two newline characters (effectively leaving a blank line after the field name).  Do NOT write anything else like \"(None mentioned)\", \"(Not specified)\", or any explanatory text.  Just leave it blank.**\n\nExtract information **EXACTLY as it appears** in the following call transcription and fill in the report template below.  **Do not infer, assume, or add any information that is not explicitly present in the transcription.**\n\nSome remarks to guide you:\n* \"Software: \" - If there is **no mention** of any software in the transcription, leave this field **completely empty**.\n* \"Responsibilities: \" -  If responsibilities are mentioned, write them as bullet points using the exact wording from the transcription. If **no responsibilities are mentioned**, leave this field **completely empty**.\n* \"Future Needs: \" - If future needs are explicitly mentioned, extract them. If **no future needs are mentioned**, leave this field **completely empty**.\n* \"Status by the position(s) (possible/impossible): \" - If the status of the position is mentioned, extract it. If **no status is mentioned**, leave this field **completely empty**.\n* \"Next Contact Day: \" - If a next contact day is mentioned, extract it. If **no next contact day is mentioned**, leave this field **completely empty**.\n* \"Planned Start Date: \" - If a planned start date is mentioned, extract it. If **no planned start date is mentioned**, leave this field **completely empty**.\n\n\nCall Transcription:\n{{ $json['Extracred Text'] }}\n\nfill information here\n\nImmediate Requirement:\n\nProfessional Skills:\n\nSoftware:\n\nResponsibilities:\n\nFuture Needs:\n\nStatus by the position(s) (possible/impossible): \n\nNext Step:\n\nNext Contact Day:\n\nPlanned Start Date:\n\nFormat the answer exactly according to the template.  For fields with information, leave an empty line between the field name and the value (or the first bullet point for Responsibilities). For fields with NO information from the transcription, leave a **completely empty line** after the field name and colon."},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.5,"position":[2480,1060],"id":"e41cbd26-e6e2-418c-8ba8-a949362fb0b1","name":"Usefull information about client"},{"parameters":{"resource":"message","guildId":{"__rl":true,"value":"732698343951695963","mode":"list","cachedResultName":"Remote Helpers","cachedResultUrl":"https://discord.com/channels/732698343951695963"},"sendTo":"user","userId":{"__rl":true,"value":"454595558779387904","mode":"id"},"content":"={{ $json.text }}","options":{}},"type":"n8n-nodes-base.discord","typeVersion":2,"position":[3120,1200],"id":"938f4131-14f5-4c2c-933a-ca08ee18abd5","name":"Danylo","webhookId":"0dd4c953-a86e-41eb-9258-01d9a011e87a","credentials":{"discordBotApi":{"id":"ATASGOhmkeLExW1R","name":"Discord Bot account"}}},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3,"position":[2880,940],"id":"c2df71da-33da-4f9f-9200-4c6b1ad7c5cf","name":"Merge1"}],"connections":{"Gmail":{"main":[[{"node":"If","type":"main","index":0}]]},"OpenRouter Chat Model":{"ai_languageModel":[[{"node":"Basic LLM Chain","type":"ai_languageModel","index":0}]]},"Basic LLM Chain":{"main":[[{"node":"Discord","type":"main","index":0}]]},"If":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Google Sheets":{"main":[[{"node":"Google Docs","type":"main","index":0}]]},"Google Docs":{"main":[[{"node":"Google Sheets1","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Google Sheets","type":"main","index":0}]]},"Google Sheets1":{"main":[[{"node":"Google Sheets2","type":"main","index":0}]]},"Google Sheets2":{"main":[[{"node":"Basic LLM Chain","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"Gmail1","type":"main","index":0},{"node":"Google Calendar1","type":"main","index":0}]]},"Google Calendar":{"main":[[{"node":"Code2","type":"main","index":0}]]},"Format Date":{"main":[[]]},"Extract Calendar Data":{"main":[[{"node":"Basic LLM Chain2","type":"main","index":0},{"node":"Merge","type":"main","index":1}]]},"Gmail1":{"main":[[{"node":"Code3","type":"main","index":0}]]},"Google Calendar1":{"main":[[{"node":"Extract Calendar Data","type":"main","index":0}]]},"Code3":{"main":[[{"node":"Code4","type":"main","index":0}]]},"Code4":{"main":[[{"node":"If1","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Extract Calendar Data1","type":"main","index":0}]]},"OpenRouter Chat Model1":{"ai_languageModel":[[{"node":"Start of report","type":"ai_languageModel","index":0}]]},"Google Docs1":{"main":[[{"node":"Code5","type":"main","index":0}]]},"Google Sheets3":{"main":[[{"node":"Google Sheets5","type":"main","index":0}]]},"Google Sheets5":{"main":[[{"node":"Start of report","type":"main","index":0},{"node":"Usefull information about client","type":"main","index":0}]]},"Google Sheets4":{"main":[[{"node":"Google Docs1","type":"main","index":0}]]},"Code5":{"main":[[{"node":"Google Sheets3","type":"main","index":0}]]},"OpenRouter Chat Model2":{"ai_languageModel":[[{"node":"Basic LLM Chain2","type":"ai_languageModel","index":0}]]},"Basic LLM Chain2":{"main":[[{"node":"Merge","type":"main","index":2}]]},"Extract Calendar Data1":{"main":[[{"node":"Google Sheets4","type":"main","index":0}]]},"If1":{"main":[[{"node":"No Operation, do nothing","type":"main","index":0}],[{"node":"Merge","type":"main","index":0}]]},"OpenRouter Chat Model3":{"ai_languageModel":[[{"node":"Usefull information about client","type":"ai_languageModel","index":0}]]},"Code6":{"main":[[{"node":"Sales Comment","type":"main","index":0}]]},"Start of report":{"main":[[{"node":"Merge1","type":"main","index":0}]]},"Usefull information about client":{"main":[[{"node":"Merge1","type":"main","index":1}]]},"Merge1":{"main":[[{"node":"Code6","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"cce56840-3edb-4655-bc49-c1a9f7fef527","triggerCount":0,"tags":[{"createdAt":"2025-03-17T12:52:07.245Z","updatedAt":"2025-03-17T12:52:07.245Z","id":"8gQGu3wLTaddTC1B","name":"report"},{"createdAt":"2025-04-11T07:25:18.150Z","updatedAt":"2025-04-11T07:25:18.150Z","id":"F4yBYHrbQwB5aiFj","name":"Sales"}]}